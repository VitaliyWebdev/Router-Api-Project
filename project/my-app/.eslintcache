[{"D:\\IncoraRouterProject\\project\\my-app\\src\\index.js":"1","D:\\IncoraRouterProject\\project\\my-app\\src\\reportWebVitals.js":"2","D:\\IncoraRouterProject\\project\\my-app\\src\\App.js":"3","D:\\IncoraRouterProject\\project\\my-app\\src\\components\\UsersList.js":"4","D:\\IncoraRouterProject\\project\\my-app\\src\\api\\index.js":"5","D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\index.js":"6","D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\reducers\\index.js":"7","D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\reducers\\user-reducer.js":"8","D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\action-types\\index.js":"9","D:\\IncoraRouterProject\\project\\my-app\\src\\components\\PostsList.js":"10","D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\reducers\\post-reducer.js":"11","D:\\IncoraRouterProject\\project\\my-app\\src\\components\\PostDetail.js":"12","D:\\IncoraRouterProject\\project\\my-app\\src\\components\\NewPost.js":"13"},{"size":760,"mtime":1612213436949,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":756,"mtime":1612293654014,"results":"17","hashOfConfig":"15"},{"size":900,"mtime":1612261012082,"results":"18","hashOfConfig":"15"},{"size":522,"mtime":1612294875577,"results":"19","hashOfConfig":"15"},{"size":121,"mtime":1612259996611,"results":"20","hashOfConfig":"15"},{"size":232,"mtime":1612214103627,"results":"21","hashOfConfig":"15"},{"size":309,"mtime":1612211207273,"results":"22","hashOfConfig":"15"},{"size":172,"mtime":1612294423438,"results":"23","hashOfConfig":"15"},{"size":1458,"mtime":1612295590562,"results":"24","hashOfConfig":"15"},{"size":582,"mtime":1612379632072,"results":"25","hashOfConfig":"15"},{"size":1007,"mtime":1612293084572,"results":"26","hashOfConfig":"15"},{"size":1083,"mtime":1612379632071,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"141plgh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\IncoraRouterProject\\project\\my-app\\src\\index.js",[],["58","59"],"D:\\IncoraRouterProject\\project\\my-app\\src\\reportWebVitals.js",[],"D:\\IncoraRouterProject\\project\\my-app\\src\\App.js",[],"D:\\IncoraRouterProject\\project\\my-app\\src\\components\\UsersList.js",["60","61"],"import React, {useEffect} from 'react';\r\nimport {getData} from \"../api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_USERS} from \"../redux/action-types\";\r\nimport '../App.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function UsersList() {\r\n    const dispatch = useDispatch();\r\n    const users = useSelector((store) => store.users.users)\r\n\r\n    useEffect(async () => {\r\n        const data = await getData('users')\r\n        dispatch({type: SET_USERS, payload: data})\r\n    }, [])\r\n    return (\r\n        <div className='d-flex user-list col-3'>\r\n            <Link to='/posts'>\r\n                <button type=\"button\" className=\"btn btn-primary\">Posts</button>\r\n            </Link>\r\n            <ul className='user-box'>\r\n                {!!users && users.map((user, id) => <li key={id}>{user.id}:{user.name}</li>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","D:\\IncoraRouterProject\\project\\my-app\\src\\api\\index.js",[],"D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\index.js",[],"D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\reducers\\index.js",[],"D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\reducers\\user-reducer.js",[],"D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\action-types\\index.js",[],"D:\\IncoraRouterProject\\project\\my-app\\src\\components\\PostsList.js",["62","63"],"import React, {useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {getData} from \"../api\";\r\nimport {SET_POSTS} from \"../redux/action-types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nexport default function PostsList() {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector((store) => store.posts.posts)\r\n\r\n    useEffect(async () => {\r\n        const data = await getData('posts')\r\n        dispatch({type: SET_POSTS, payload: data})\r\n    }, [posts])\r\n\r\n\r\n    return (\r\n        <div className='d-flex user-list col-5'>\r\n            <ul className='user-box'>\r\n                <Link to='/posts/id/new'>\r\n                    <button type=\"button\"\r\n                            className=\"btn btn-dark btn-lg\">\r\n                        Create New Post\r\n                    </button>\r\n                </Link>\r\n\r\n                {\r\n                    !!posts && posts.map((post, id) =>\r\n                        <li key={id}>{post.id}:{post.title}\r\n                            <Link to={`/posts/${post.id}`}>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\">\r\n                                    details\r\n                                </button>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","D:\\IncoraRouterProject\\project\\my-app\\src\\redux\\reducers\\post-reducer.js",[],"D:\\IncoraRouterProject\\project\\my-app\\src\\components\\PostDetail.js",["64","65"],"import React, {useEffect} from 'react';\r\nimport '../App.css'\r\nimport {getData} from \"../api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_CHOSEN_POST} from \"../redux/action-types\";\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport default function PostDetail() {\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams();\r\n    console.log(id);\r\n    const posts = useSelector(store => store.posts.posts);\r\n\r\n    useEffect(async () => {\r\n        let data = await getData(`posts?userId=${id}`)\r\n        dispatch({type: SET_CHOSEN_POST, payload: data})\r\n    }, [])\r\n// const {body,id,title} = posts.find(el=> el.id === +params.id);\r\n    console.log(posts, 'chose posts')\r\n\r\n    return (\r\n        <div className='details-box'>\r\n            <h1>Details about chosen post with userId:{id}</h1>\r\n           <ul>\r\n               {\r\n                   posts.map((el,index)=><li key={index}>{el.id}-{el.title}</li>)\r\n               }\r\n           </ul>\r\n        </div>\r\n    );\r\n}\r\n","D:\\IncoraRouterProject\\project\\my-app\\src\\components\\NewPost.js",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":13,"column":15,"nodeType":"74","endLine":16,"endColumn":6},{"ruleId":"72","severity":1,"message":"75","line":16,"column":8,"nodeType":"76","endLine":16,"endColumn":10,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"73","line":12,"column":15,"nodeType":"74","endLine":15,"endColumn":6},{"ruleId":"72","severity":1,"message":"75","line":15,"column":8,"nodeType":"76","endLine":15,"endColumn":15,"suggestions":"78"},{"ruleId":"72","severity":1,"message":"73","line":14,"column":15,"nodeType":"74","endLine":17,"endColumn":6},{"ruleId":"72","severity":1,"message":"79","line":17,"column":8,"nodeType":"76","endLine":17,"endColumn":10,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"81","severity":1,"message":"85","line":2,"column":9,"nodeType":"83","messageId":"84","endLine":2,"endColumn":17},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["88"],["89"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["90"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'postData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [dispatch]",{"range":"97","text":"98"},"Update the dependencies array to be: [dispatch, posts]",{"range":"99","text":"100"},"Update the dependencies array to be: [dispatch, id]",{"range":"101","text":"102"},[516,518],"[dispatch]",[495,502],"[dispatch, posts]",[595,597],"[dispatch, id]"]